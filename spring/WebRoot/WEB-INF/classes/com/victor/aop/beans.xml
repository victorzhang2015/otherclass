<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd ">
	<!-- 配置被代理对象 -->
	<bean id="test1Service" class="com.victor.aop.Test1Service">
		<property name="name" value="jack">
		</property>
	</bean>
	<bean id="test2Service" class="com.victor.aop.Test2Service">
		<property name="name" value="rose"/>
	</bean>
	<!-- 配置通知对象 -->
	<!-- 前置通知 -->
	<bean id="myMethodBeforeAdvice" class="com.victor.aop.MyMethodBeforeAdvice"></bean>
	<!-- 后置通知 -->
	<bean id="myMethodAfterAdvice" class="com.victor.aop.MyMethodAfterAdvice"></bean>
	<!-- 环绕通知 -->
	<bean id="myMethodInterceptor" class="com.victor.aop.MyMethodInterceptor"></bean>
	<!-- 异常通知 -->
	<bean id="myException" class="com.victor.aop.MyException"></bean>
	<!-- 定义前置通知的切入点-->
	<bean id="myMethodBeforeAdviceFilter" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="myMethodBeforeAdvice"/>
		<property name="mappedNames">
			<list>
				<value>sayHello</value>
			</list>
		</property>
	</bean>
	<!-- 配置代理对象 -->
	<bean id="proxyFactoryBean" class="org.springframework.aop.framework.ProxyFactoryBean">
		<!-- 代理接口集合 -->
		<property name="proxyInterfaces">
			<list>
				<value>com.victor.aop.ServiceInterface</value>
				<value>com.victor.aop.ServiceInterface2</value>
			</list>
		</property>
		<!-- 把通知织入代理对象 -->
		<property name="interceptorNames">
			<list>
				<!-- 需要进行将myMethodBeforeAdvice修改 myMethodBeforeAdviceFilter-->
				<value>myMethodBeforeAdviceFilter</value>
				<value>myMethodAfterAdvice</value>
				<value>myMethodInterceptor</value>
				<value>myException</value>
			</list>
		</property>
		<!-- 配置被代理的对象，可以指定 -->
		<property name="target" ref="test1Service"></property>
		<!-- <property name="target" ref="test2Service"/> -->
	</bean>
</beans>